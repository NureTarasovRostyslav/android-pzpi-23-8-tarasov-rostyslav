МІНІСТЕРСТВО ОСВІТИ ТА НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ
РАДІОЕЛЕКТРОНІКИ




ЗВІТ
Практичної роботи №2
з дисципліни «Програмування під Android»
на тему «Створення мінімального Android застосунку»


Виконав:
Тарасов Ростислав Максимович
Перевірив:
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович









Харків 2024

1 
2 
2.1  Мета роботи:
a) Навчитися створювати та налаштовувати розмітку екрана в Android-застосунках, використовуючи XML-файли. Зрозуміти, як компоненти інтерфейсу користувача розташовуються на екрані та взаємодіють між собою. 
b) Ознайомитися із основними поняттями розмітки інтерфейсу в Android. Навчитися створювати XML-файли розмітки та використовувати різні типи Layout для побудови інтерфейсу застосунку.
c) Ознайомитися із життєвим циклом компонентів Activity у застосунках Android та навчитися керувати станами Activity через використання ключових методів життєвого циклу.
     
1.2  Завдання
1.2.1 Виконати завдання «Хід заняття»[1] на сторінках методичних вказівок практичних занять для практичного заняття №2;
1.2.2 Самостійне завдання 1:
• Створити розмітку з використанням GridLayout, розмістіть у ній текстові поля, кнопки та зображення;
• Експериментувати з налаштуванням відступів та вирівнюванням елементів у макеті.;
• Додати кілька кнопок і запрограмувати їх на виконання різних дій, таких як зміна тексту у текстовому полі або виведення повідомлень на екран;
1.2.3 Самостійне завдання 2:
• Створити інтерфейс користувача для застосунку калькулятора, використовуючи GridLayout;
• Додати кілька кнопок до інтерфейсу та запрограмувати їх на виведення тексту в полі TextView;
1.2.4 Самостійне завдання 3:
• Реалізувати застосунок, у якому стан користувача (наприклад, лічильник кліків) зберігається під час зміни орієнтації екрана;
• Додати до застосунку таймер, який автоматично призупиняється при виклику методу onPause() і поновлюється після onResume().

1.3  Хід роботи
     Виконуємо «хід заняття» для всіх тем ПЗ2;
     Результат зберігаємо з назвою “practice 2” (папка android-pzpi-23-8-tarasov-rostyslav-pract-task1) для першої теми, “practice 2.2” (папка android-pzpi-23-8-tarasov-rostyslav-pract-task2) для другої і “practice 2.5” (папка android-pzpi-23-8-tarasov-rostyslav-pract-task5) для третьої.
     Самостійні роботи:
     Перша (папка android-pzpi-23-8-tarasov-rostyslav-pract-task2). Створюємо новий проєкт, в файлі розмітки додаємо GridLayout, а в ньому розташовуємо кнопки, картинки і текстове поле (додаток А). Далі доповнюємо MainActivity.java. Додаємо обробник подій натискань на кнопки – до текстового поля додаємо текст кнопки, якщо текст кнопки – «backspace», то видаляємо останній символ з текстового поля (додаток Б).
     Друга (папка android-pzpi-23-8-tarasov-rostyslav-pract-task4). Створюємо новий проєкт, в файлі розмітки змінюємо головний макет на RealativeLayout і додаємо TextView і GridLayout. В GridLayout свторюємо кнопки із цифрами і арифметичними операціями (додаток В). І доповнюємо MainActivity.java. Знаходимо текстове поле для результату, створюємо функцію з циклом запрограмовування кожної з кнопок на додавання свого символу до текстового поля, і функцію «backspace» для видалення останнього символу (додаток Г).
     Третя. Створюємо новий проєкт, в файлі розмітки activity_main.xml змінюємо макет на RealativeLayout і додаємо кнопку, текстове поле і поле введення тексту (додаток Д). Створюємо нове activity activity_additional.xml, змінюємо макет на RealativeLayout і додаємо 2 кнопки текстове поле (додаток Е). 
     Редагуємо MainActivity.java. Ініціалізуємо текстове поле для таймера, і встановлюємо слухач для кнопки, який запускає нову активність additional_activity. Таймер оновлюємо за допомогою `Handler` та `Runnable`, що запускає оновлення тексту кожні 10 мс. В методі `onResume` таймер починає працювати, а в методі `onPause` зупиняється, зберігаючи пройшовший час. В методі `onSaveInstanceState` зберігається значення часу таймера та текст з `EditText`, а в методі `onRestoreInstanceState` відновлюються збережені значення. В кожному методі життєвого циклу (`onStart`, `onResume`, `onPause`, `onStop`, `onDestroy`, `onRestart`) додається логування для відстеження виконання методів. Метод `nextActivity` реалізує перехід до `additional_activity` (додаток З). 
     Далі редагуємо AdditionalActivity.java. В методі `onCreate`  встановлюються слухачі для кнопок `close_activity_button` та `click_counter`. Метод `add1` збільшує значення лічильника `counter` на 1 при кожному кліку на кнопку `click_counter` та оновлює текстове поле `counter_view` для відображення поточного значення лічильника. Метод `close_activity` завершує поточну активність і повертає користувача до попередньої активності. В кожному методі життєвого циклу (`onStart`, `onResume`, `onPause`, `onStop`, `onDestroy`, `onRestart`) додається логування для відстеження виконання методів. В методі `onSaveInstanceState` зберігається значення тексту з `TextView` перед знищенням активності, а в методі `onRestoreInstanceState` відновлюються збережені значення, включаючи значення лічильника `counter` (додаток К). 
• 

1.4  Висновки
     Посилання на відеозахист: https://youtu.be/Me893rTD1bc
     Під час практичного заняття ми навчилися створювати та налаштовувати розмітку екрана в Android-застосунках, використовуючи XML-файли, що дало нам розуміння того, як компоненти інтерфейсу користувача розташовуються на екрані та взаємодіють між собою. 
     Ми ознайомилися з основними поняттями розмітки інтерфейсу в Android, навчилися створювати XML-файли розмітки та використовувати різні типи Layout для побудови інтерфейсу застосунку, що дозволило нам ефективно організовувати компоненти інтерфейсу. Крім того, ми ознайомилися з життєвим циклом компонентів Activity у застосунках Android та навчилися керувати станами Activity через використання ключових методів життєвого циклу, що дало нам змогу зрозуміти, як правильно обробляти різні стани Activity для забезпечення стабільної роботи застосунку.


ДЖЕРЕЛА
1. МЕТОДИЧНІ ВКАЗІВКИ ДО ПРАКТИЧНИХ ЗАНЯТЬ URL: https://dl.nure.ua/mod/page/view.php?id=599587



     Додаток А
Вихідний код activity_main.xml для самостійного завдання 1
1 <?xml version="1.0" encoding="utf-8"?>
2 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
3     xmlns:app="http://schemas.android.com/apk/res-auto"
4     xmlns:tools="http://schemas.android.com/tools"
5     android:id="@+id/main"
6     android:layout_width="match_parent"
7     android:layout_height="match_parent"
8     tools:context=".MainActivity">
9 
10     <GridLayout
11         android:layout_width="match_parent"
12         android:layout_height="match_parent"
13         android:columnCount="4"
14         android:gravity="center"
15         android:padding="10dp"
16         android:rowCount="6">
17 
18         <TextView
19             android:id="@+id/textView0"
20             android:layout_width="wrap_content"
21             android:layout_height="wrap_content"
22             android:layout_row="0"
23             android:layout_column="0"
24             android:layout_columnSpan="3"
25             android:hint="0"
26             android:padding="10dp" />
27 
28         <ImageView
29             android:id="@+id/imageView"
30             android:layout_width="wrap_content"
31             android:layout_height="wrap_content"
32             android:layout_row="1"
33             android:layout_column="0"
34             android:layout_columnSpan="3"
35             android:layout_gravity="fill"
36             android:padding="10dp"
37             app:srcCompat="@android:drawable/alert_dark_frame" />
38 
39         <Button
40             android:id="@+id/button0"
41             android:layout_width="wrap_content"
42             android:layout_height="wrap_content"
43             android:layout_row="2"
44             android:layout_column="0"
45             android:layout_gravity="fill"
46             android:onClick="btn_click"
47             android:padding="10dp"
48             android:text="1" />
49 
50         <Button
51             android:id="@+id/button1"
52             android:layout_width="wrap_content"
53             android:layout_height="wrap_content"
54             android:layout_row="2"
55             android:layout_column="1"
56             android:layout_gravity="fill"
57             android:onClick="btn_click"
58             android:padding="10dp"
59             android:text="2" />
60 
61         <ImageView
62             android:id="@+id/imageView2"
63             android:layout_width="wrap_content"
64             android:layout_height="wrap_content"
65             android:layout_row="2"
66             android:layout_column="2"
67             android:layout_gravity="fill"
68             android:padding="10dp"
69             app:srcCompat="@android:drawable/alert_dark_frame" />
70 
71         <Button
72             android:id="@+id/button5"
73             android:layout_width="wrap_content"
74             android:layout_height="wrap_content"
75             android:layout_row="3"
76             android:layout_column="0"
77             android:layout_gravity="fill"
78             android:onClick="btn_click"
79             android:padding="10dp"
80             android:text="3" />
81 
82         <Button
83             android:id="@+id/button2"
84             android:layout_width="wrap_content"
85             android:layout_height="wrap_content"
86             android:layout_row="3"
87             android:layout_column="1"
88             android:layout_gravity="fill"
89             android:onClick="btn_click"
90             android:padding="10dp"
91             android:text="4" />
92 
93         <ImageView
94             android:id="@+id/imageView3"
95             android:layout_width="wrap_content"
96             android:layout_height="wrap_content"
97             android:layout_row="3"
98             android:layout_column="2"
99             android:layout_gravity="fill"
100             android:padding="10dp"
101             app:srcCompat="@android:drawable/alert_dark_frame" />
102 
103         <Button
104             android:id="@+id/button3"
105             android:layout_width="wrap_content"
106             android:layout_height="wrap_content"
107             android:layout_row="4"
108             android:layout_column="0"
109             android:layout_gravity="fill"
110             android:onClick="btn_click"
111             android:padding="10dp"
112             android:text="5" />
113 
114         <Button
115             android:id="@+id/button4"
116             android:layout_width="wrap_content"
117             android:layout_height="wrap_content"
118             android:layout_row="4"
119             android:layout_column="1"
120             android:layout_gravity="fill"
121             android:onClick="btn_click"
122             android:padding="10dp"
123             android:text="backspace" />
124 
125         <ImageView
126             android:id="@+id/imageView4"
127             android:layout_width="wrap_content"
128             android:layout_height="wrap_content"
129             android:layout_row="4"
130             android:layout_column="2"
131             android:layout_gravity="fill"
132             android:padding="10dp"
133             app:srcCompat="@android:drawable/alert_dark_frame" />
134     </GridLayout>
135 </androidx.constraintlayout.widget.ConstraintLayout>
136 

     Додаток Б
вихідний код MainActivity.java для самостійного завдання 1
       1 public class MainActivity extends AppCompatActivity {
       2 
       3     @Override
       4     protected void onCreate(Bundle savedInstanceState) {
       5         super.onCreate(savedInstanceState);
       6         EdgeToEdge.enable(this);
       7         setContentView(R.layout.activity_main);
       8         ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
       9             Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
       10             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
       11             return insets;
       12         });
       13 
       14     }
       15 
       16     @SuppressLint("SetTextI18n")
       17     public void btn_click(View view) {
       18         if (view instanceof Button) {
       19             TextView output = findViewById(R.id.textView0);
       20             String old = output.getText().toString();
       21 
       22             if (((Button) view).getText().equals("backspace")){
       23                 output.setText(removeLastChar(old));
       24             }else{
       25                 output.setText(old+((Button) view).getText());
       26             }
       27 
       28         }
       29     }
       30 
       31     public static String removeLastChar(String s) {
       32         return (s == null || s.isEmpty())
       33                 ? null
       34                 : (s.substring(0, s.length() - 1));
       35     }
       36 }


     Додаток В
Вихідний код activity_main.xml для самостійного завдання 2
       1 <?xml version="1.0" encoding="utf-8"?>
       2 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
       3     xmlns:app="http://schemas.android.com/apk/res-auto"
       4     xmlns:tools="http://schemas.android.com/tools"
       5     android:id="@+id/main"
       6     android:layout_width="match_parent"
       7     android:layout_height="match_parent"
       8     android:background="@color/black"
       9     android:orientation="vertical"
       10     android:padding="16dp"
       11     tools:context=".MainActivity">
       12 
       13 
       14     <TextView
       15         android:id="@+id/displayTextView"
       16         android:layout_width="match_parent"
       17         android:layout_height="wrap_content"
       18         android:layout_alignParentTop="true"
       19         android:gravity="end"
       20         android:padding="16dp"
       21         android:text="0"
       22         android:textSize="32sp" />
       23 
       24     <GridLayout
       25         android:id="@+id/gridLayout"
       26         android:layout_width="match_parent"
       27         android:layout_height="wrap_content"
       28         android:layout_alignParentBottom="true"
       29         android:layout_marginTop="16dp"
       30         android:alignmentMode="alignMargins"
       31         android:columnCount="4"
       32         android:rowCount="6">
       33 
       34         <Button
       35             android:id="@+id/button7"
       36             android:layout_width="wrap_content"
       37             android:layout_height="wrap_content"
       38             android:layout_row="1"
       39             android:layout_rowSpan="1"
       40             android:layout_column="0"
       41             android:layout_columnSpan="1"
       42             android:layout_gravity="fill"
       43             android:text="7" />
       44 
       45         <Button
       46             android:id="@+id/button8"
       47             android:layout_width="wrap_content"
       48             android:layout_height="wrap_content"
       49             android:layout_row="1"
       50             android:layout_rowSpan="1"
       51             android:layout_column="1"
       52             android:layout_columnSpan="1"
       53             android:layout_gravity="fill"
       54             android:text="8" />
       55 
       56         <Button
       57             android:id="@+id/button9"
       58             android:layout_width="wrap_content"
       59             android:layout_height="wrap_content"
       60             android:layout_row="1"
       61             android:layout_rowSpan="1"
       62             android:layout_column="2"
       63             android:layout_columnSpan="1"
       64             android:layout_gravity="fill"
       65             android:text="9" />
       66 
       67         <Button
       68             android:id="@+id/buttonDivide"
       69             android:layout_width="wrap_content"
       70             android:layout_height="wrap_content"
       71             android:layout_row="5"
       72             android:layout_rowSpan="1"
       73             android:layout_column="3"
       74             android:layout_columnSpan="1"
       75             android:layout_gravity="fill"
       76             android:text="/" />
       77 
       78         <Button
       79             android:id="@+id/button4"
       80             android:layout_width="wrap_content"
       81             android:layout_height="wrap_content"
       82             android:layout_row="2"
       83             android:layout_rowSpan="1"
       84             android:layout_column="0"
       85             android:layout_columnSpan="1"
       86             android:layout_gravity="fill"
       87             android:text="4" />
       88 
       89         <Button
       90             android:id="@+id/button5"
       91             android:layout_width="wrap_content"
       92             android:layout_height="wrap_content"
       93             android:layout_row="2"
       94             android:layout_rowSpan="1"
       95             android:layout_column="1"
       96             android:layout_columnSpan="1"
       97             android:layout_gravity="fill"
       98             android:text="5" />
       99 
       100         <Button
       101             android:id="@+id/button6"
       102             android:layout_width="wrap_content"
       103             android:layout_height="wrap_content"
       104             android:layout_row="2"
       105             android:layout_rowSpan="1"
       106             android:layout_column="2"
       107             android:layout_columnSpan="1"
       108             android:layout_gravity="fill"
       109             android:text="6" />
       110 
       111         <Button
       112             android:id="@+id/buttonMultiply"
       113             android:layout_width="wrap_content"
       114             android:layout_height="wrap_content"
       115             android:layout_row="5"
       116             android:layout_rowSpan="1"
       117             android:layout_column="2"
       118             android:layout_columnSpan="1"
       119             android:layout_gravity="fill"
       120             android:text="*" />
       121 
       122         <Button
       123             android:id="@+id/button1"
       124             android:layout_width="wrap_content"
       125             android:layout_height="wrap_content"
       126             android:layout_row="3"
       127             android:layout_rowSpan="1"
       128             android:layout_column="0"
       129             android:layout_columnSpan="1"
       130             android:layout_gravity="fill"
       131             android:text="1" />
       132 
       133         <Button
       134             android:id="@+id/button2"
       135             android:layout_width="wrap_content"
       136             android:layout_height="wrap_content"
       137             android:layout_row="3"
       138             android:layout_rowSpan="1"
       139             android:layout_column="1"
       140             android:layout_columnSpan="1"
       141             android:layout_gravity="fill"
       142             android:text="2" />
       143 
       144         <Button
       145             android:id="@+id/button3"
       146             android:layout_width="wrap_content"
       147             android:layout_height="wrap_content"
       148             android:layout_row="3"
       149             android:layout_rowSpan="1"
       150             android:layout_column="2"
       151             android:layout_columnSpan="1"
       152             android:layout_gravity="fill"
       153             android:text="3" />
       154 
       155         <Button
       156             android:id="@+id/buttonMinus"
       157             android:layout_width="wrap_content"
       158             android:layout_height="wrap_content"
       159             android:layout_row="3"
       160             android:layout_rowSpan="1"
       161             android:layout_column="3"
       162             android:layout_columnSpan="1"
       163             android:layout_gravity="fill"
       164             android:text="-" />
       165 
       166         <Button
       167             android:id="@+id/button0"
       168             android:layout_width="wrap_content"
       169             android:layout_height="wrap_content"
       170             android:layout_row="4"
       171             android:layout_rowSpan="2"
       172             android:layout_column="0"
       173             android:layout_columnSpan="2"
       174             android:layout_gravity="fill"
       175             android:text="0" />
       176 
       177         <Button
       178             android:id="@+id/buttonDot"
       179             android:layout_width="wrap_content"
       180             android:layout_height="wrap_content"
       181             android:layout_row="4"
       182             android:layout_rowSpan="1"
       183             android:layout_column="2"
       184             android:layout_columnSpan="1"
       185             android:layout_gravity="fill"
       186             android:text="." />
       187 
       188         <Button
       189             android:id="@+id/buttonPlus"
       190             android:layout_width="wrap_content"
       191             android:layout_height="wrap_content"
       192             android:layout_row="4"
       193             android:layout_rowSpan="1"
       194             android:layout_column="3"
       195             android:layout_columnSpan="1"
       196             android:layout_gravity="fill"
       197             android:text="+" />
       198 
       199         <Button
       200             android:id="@+id/buttonBackspace"
       201             android:layout_width="0dp"
       202             android:layout_height="0dp"
       203             android:layout_row="1"
       204             android:layout_column="3"
       205             android:layout_gravity="fill"
       206             android:text="⌫" />
       207 
       208         <Button
       209             android:id="@+id/buttonEquals"
       210             android:layout_width="0dp"
       211             android:layout_height="0dp"
       212             android:layout_row="2"
       213             android:layout_column="3"
       214             android:layout_gravity="fill"
       215             android:text="=" />
       216     </GridLayout>
       217 </RelativeLayout>


     Додаток Г
Вихідний код MainActivity.java для самостійного завдання 2
       1 public class MainActivity extends AppCompatActivity {
       2 
       3     private TextView textViewResult;
       4     private StringBuilder currentInput = new StringBuilder();
       5 
       6     @Override
       7     protected void onCreate(Bundle savedInstanceState) {
       8         super.onCreate(savedInstanceState);
       9         EdgeToEdge.enable(this);
       10         setContentView(R.layout.activity_main);
       11         ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
       12             Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
       13             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
       14             return insets;
       15         });
       16         textViewResult = findViewById(R.id.displayTextView);
       17 
       18         setButtonListeners();
       19     }
       20 
       21     private void setButtonListeners() {
       22         int[] buttonIds = {
       23                 R.id.button0, R.id.button1, R.id.button2, R.id.button3, R.id.button4,
       24                 R.id.button5, R.id.button6, R.id.button7, R.id.button8, R.id.button9,
       25                 R.id.buttonPlus, R.id.buttonMinus, R.id.buttonMultiply, R.id.buttonDivide,
       26                 R.id.buttonEquals, R.id.buttonBackspace
       27         };
       28 
       29         for (int id : buttonIds) {
       30             findViewById(id).setOnClickListener(this::onButtonClick);
       31         }
       32     }
       33 
       34     private void onButtonClick(View view) {
       35         Button button = (Button) view;
       36         String buttonText = button.getText().toString();
       37 
       38         if (buttonText.equals("⌫")) {
       39             backspace();
       40         } else {
       41             currentInput.append(buttonText);
       42             textViewResult.setText(currentInput.toString());
       43         }
       44     }
       45     private void backspace() {
       46         if (currentInput.length() > 0) {
       47             currentInput.deleteCharAt(currentInput.length() - 1);
       48             textViewResult.setText(currentInput.toString());
       49         }
       50     }
       51 
       52     @Override
       53     protected void onStart() {
       54         super.onStart();
       55     }
       56 
       57     @Override
       58     protected void onResume() {
       59         super.onResume();
       60     }
       61 
       62     @Override
       63     protected void onPause() {
       64         super.onPause();
       65     }
       66 
       67     @Override
       68     protected void onStop() {
       69         super.onStop();
       70     }
       71 
       72     @Override
       73     protected void onDestroy() {
       74         super.onDestroy();
       75     }
       76 
       77     @Override
       78     protected void onRestart() {
       79         super.onRestart();
       80     }
       81 }


     Додаток Г
Вихідний код activity_main.xml для самостійного завдання 3
       <?xml version="1.0" encoding="utf-8"?>
       <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
           xmlns:app="http://schemas.android.com/apk/res-auto"
           xmlns:tools="http://schemas.android.com/tools"
           android:id="@+id/main"
           android:layout_width="match_parent"
           android:layout_height="match_parent"
           tools:context=".MainActivity">
           <EditText
               android:id="@+id/edit_text_1"
               android:layout_width="match_parent"
               android:layout_height="wrap_content"
               android:layout_margin="50dp"
               android:autofillHints="Some text"
               android:hint="Some text" />
           <Button
               android:id="@+id/next_act_button"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
               android:text="Next" />
           <TextView
               android:id="@+id/timer_view"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
               android:layout_centerInParent="true"
               android:text="0"
               android:textSize="50sp" />
       
       </RelativeLayout>
Додаток Д
Вихідний код MainActivity.java для самостійного завдання 3
       1 public class MainActivity extends AppCompatActivity {
       2     private final int[] ids_to_save = {
       3             R.id.edit_text_1
       4     };
       5 
       6     private TextView timerTextView;
       7     private Handler handler = new Handler();
       8     private long startTime = 0L;
       9     private long elapsedTime = 0L;
       10 
       11     private Runnable updateTimerThread = new Runnable() {
       12         public void run() {
       13             long currentTime = SystemClock.uptimeMillis() - startTime;
       14             long totalElapsedTime = elapsedTime + currentTime;
       15 
       16             int secs = (int) (totalElapsedTime / 1000);
       17             int mins = secs / 60;
       18             secs = secs % 60;
       19             int milliseconds = (int) (totalElapsedTime % 1000);
       20 
       21             timerTextView.setText(String.format("%02d:%02d:%03d", mins, secs, milliseconds));
       22 
       23             handler.postDelayed(this, 10);
       24         }
       25     };
       26 
       27     @Override
       28     protected void onCreate(Bundle savedInstanceState) {
       29         Log.d("onCreate", "onCreate execution");
       30         super.onCreate(savedInstanceState);
       31         EdgeToEdge.enable(this);
       32         setContentView(R.layout.activity_main);
       33         ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
       34             Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
       35             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
       36             return insets;
       37         });
       38         findViewById(R.id.next_act_button).setOnClickListener(this::nextActivity);
       39         timerTextView = findViewById(R.id.timer_view);
       40 
       41         if (savedInstanceState != null) {
       42             elapsedTime = savedInstanceState.getLong("elapsedTime");
       43         }
       44     }
       45 
       46 
       47     private void nextActivity(View view) {
       48         Intent next_activity = new Intent(this, additional_activity.class);
       49         startActivity(next_activity);
       50     }
       51 
       52     @Override
       53     protected void onStart() {
       54         Log.d("onStart", "onStart execution " + this.getLocalClassName());
       55         super.onStart();
       56     }
       57 
       58     @Override
       59     protected void onResume() {
       60         Log.d("onResume", "onResume execution " + this.getLocalClassName());
       61         super.onResume();
       62         startTime = SystemClock.uptimeMillis();
       63         handler.post(updateTimerThread);
       64     }
       65 
       66     @Override
       67     protected void onPause() {
       68         Log.d("onPause", "onPause execution " + this.getLocalClassName());
       69         super.onPause();
       70         elapsedTime += SystemClock.uptimeMillis() - startTime;
       71         handler.removeCallbacks(updateTimerThread);
       72     }
       73 
       74     @Override
       75     protected void onStop() {
       76         Log.d("onStop", "onStop execution " + this.getLocalClassName());
       77         super.onStop();
       78     }
       79 
       80     @Override
       81     protected void onDestroy() {
       82         Log.d("onDestroy", "onDestroy execution " + this.getLocalClassName());
       83         super.onDestroy();
       84     }
       85 
       86     @Override
       87     protected void onRestart() {
       88         Log.d("onRestart", "onRestart execution " + this.getLocalClassName());
       89         super.onRestart();
       90     }
       91 
       92     @Override
       93     public void onSaveInstanceState(@NonNull Bundle outState) {
       94         super.onSaveInstanceState(outState);
       95         outState.putLong("elapsedTime", elapsedTime);
       96         for (int id : ids_to_save) {
       97             View view = findViewById(id);
       98             if (view instanceof EditText) {
       99                 outState.putString(String.valueOf(id), ((EditText) view).getText().toString());
       100             }
       101         }
       102     }
       103 
       104     @Override
       105     protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {
       106         super.onRestoreInstanceState(savedInstanceState);
       107 
       108         for (int id : ids_to_save) {
       109             View view = findViewById(id);
       110             if (view instanceof EditText) {
       111                 ((EditText) view).setText(savedInstanceState.getString(String.valueOf(id)));
       112             }
       113         }
       114     }
       115 }


     Додаток Е
Вихідний код activity_additional.xml для самостійного завдання 3
       1 <?xml version="1.0" encoding="utf-8"?>
       2 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
       3     xmlns:app="http://schemas.android.com/apk/res-auto"
       4     xmlns:tools="http://schemas.android.com/tools"
       5     android:id="@+id/main"
       6     android:layout_width="match_parent"
       7     android:layout_height="match_parent"
       8     tools:context=".additional_activity">
       9     <Button
       10         android:id="@+id/previous_activity_button"
       11         android:layout_width="wrap_content"
       12         android:layout_height="wrap_content"
       13         android:text="Close" />
       14     <TextView
       15         android:id="@+id/counter_view"
       16         android:layout_width="wrap_content"
       17         android:layout_height="wrap_content"
       18         android:layout_centerInParent="true"
       19         android:text="0"
       20         android:textSize="50sp" />
       21     <Button
       22         android:id="@+id/click_counter"
       23         android:layout_width="match_parent"
       24         android:layout_height="wrap_content"
       25         android:layout_alignParentBottom="true"
       26         android:text="Click!"
       27         android:textSize="50sp"/>
       28 </RelativeLayout>


     Додаток З
Вихідний код MainActivity.java для самостійного завдання 3
       1 package com.nure_ua_tarasov.practice25;
       2 
       3 import android.annotation.SuppressLint;
       4 import android.content.Intent;
       5 import android.os.Bundle;
       6 import android.os.CountDownTimer;
       7 import android.os.Handler;
       8 import android.os.SystemClock;
       9 import android.util.Log;
       10 import android.view.View;
       11 import android.widget.EditText;
       12 import android.widget.TextView;
       13 
       14 import androidx.activity.EdgeToEdge;
       15 import androidx.annotation.NonNull;
       16 import androidx.appcompat.app.AppCompatActivity;
       17 import androidx.core.graphics.Insets;
       18 import androidx.core.view.ViewCompat;
       19 import androidx.core.view.WindowInsetsCompat;
       20 
       21 public class MainActivity extends AppCompatActivity {
       22     private final int[] ids_to_save = {
       23             R.id.edit_text_1
       24     };
       25 
       26     private TextView timerTextView;
       27     private Handler handler = new Handler();
       28     private long startTime = 0L;
       29     private long elapsedTime = 0L;
       30 
       31     private Runnable updateTimerThread = new Runnable() {
       32         public void run() {
       33             long currentTime = SystemClock.uptimeMillis() - startTime;
       34             long totalElapsedTime = elapsedTime + currentTime;
       35 
       36             int secs = (int) (totalElapsedTime / 1000);
       37             int mins = secs / 60;
       38             secs = secs % 60;
       39             int milliseconds = (int) (totalElapsedTime % 1000);
       40 
       41             timerTextView.setText(String.format("%02d:%02d:%03d", mins, secs, milliseconds));
       42 
       43             handler.postDelayed(this, 10);
       44         }
       45     };
       46 
       47     @Override
       48     protected void onCreate(Bundle savedInstanceState) {
       49         Log.d("onCreate", "onCreate execution");
       50         super.onCreate(savedInstanceState);
       51         EdgeToEdge.enable(this);
       52         setContentView(R.layout.activity_main);
       53         ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
       54             Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
       55             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
       56             return insets;
       57         });
       58         findViewById(R.id.next_act_button).setOnClickListener(this::nextActivity);
       59         timerTextView = findViewById(R.id.timer_view);
       60 
       61         if (savedInstanceState != null) {
       62             elapsedTime = savedInstanceState.getLong("elapsedTime");
       63         }
       64     }
       65 
       66 
       67     private void nextActivity(View view) {
       68         Intent next_activity = new Intent(this, additional_activity.class);
       69         startActivity(next_activity);
       70     }
       71 
       72     @Override
       73     protected void onStart() {
       74         Log.d("onStart", "onStart execution " + this.getLocalClassName());
       75         super.onStart();
       76     }
       77 
       78     @Override
       79     protected void onResume() {
       80         Log.d("onResume", "onResume execution " + this.getLocalClassName());
       81         super.onResume();
       82         startTime = SystemClock.uptimeMillis();
       83         handler.post(updateTimerThread);
       84     }
       85 
       86     @Override
       87     protected void onPause() {
       88         Log.d("onPause", "onPause execution " + this.getLocalClassName());
       89         super.onPause();
       90         elapsedTime += SystemClock.uptimeMillis() - startTime;
       91         handler.removeCallbacks(updateTimerThread);
       92     }
       93 
       94     @Override
       95     protected void onStop() {
       96         Log.d("onStop", "onStop execution " + this.getLocalClassName());
       97         super.onStop();
       98     }
       99 
       100     @Override
       101     protected void onDestroy() {
       102         Log.d("onDestroy", "onDestroy execution " + this.getLocalClassName());
       103         super.onDestroy();
       104     }
       105 
       106     @Override
       107     protected void onRestart() {
       108         Log.d("onRestart", "onRestart execution " + this.getLocalClassName());
       109         super.onRestart();
       110     }
       111 
       112     @Override
       113     public void onSaveInstanceState(@NonNull Bundle outState) {
       114         super.onSaveInstanceState(outState);
       115         outState.putLong("elapsedTime", elapsedTime);
       116         for (int id : ids_to_save) {
       117             View view = findViewById(id);
       118             if (view instanceof EditText) {
       119                 outState.putString(String.valueOf(id), ((EditText) view).getText().toString());
       120             }
       121         }
       122     }
       123 
       124     @Override
       125     protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {
       126         super.onRestoreInstanceState(savedInstanceState);
       127 
       128         for (int id : ids_to_save) {
       129             View view = findViewById(id);
       130             if (view instanceof EditText) {
       131                 ((EditText) view).setText(savedInstanceState.getString(String.valueOf(id)));
       132             }
       133         }
       134     }
       135 }
     Додаток К
Вихідний код additional_activity.java для самостійного завдання 3
       1 public class additional_activity extends AppCompatActivity {
       2     private int counter = 0;
       3     private int[] ids_to_save = {
       4             R.id.counter_view
       5     };
       6     @Override
       7     protected void onCreate(Bundle savedInstanceState) {
       8         super.onCreate(savedInstanceState);
       9         EdgeToEdge.enable(this);
       10         setContentView(R.layout.activity_additional);
       11         ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
       12             Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
       13             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
       14             return insets;
       15         });
       16 
       17         findViewById(R.id.previous_activity_button).setOnClickListener(this::close_activity);
       18         findViewById(R.id.click_counter).setOnClickListener(this::add1);
       19     }
       20 
       21     private void add1(View view) {
       22         counter++;
       23         TextView counter_view = findViewById(R.id.counter_view);
       24         counter_view.setText(String.valueOf(counter));
       25 
       26     }
       27 
       28     private void close_activity(View view) {
       29         finish();
       30     }
       31     @Override
       32     protected void onStart() {
       33         Log.d("onStart", "onStart execution " + this.getLocalClassName());
       34         super.onStart();
       35     }
       36 
       37     @Override
       38     protected void onResume() {
       39         Log.d("onResume", "onResume execution " + this.getLocalClassName());
       40         super.onResume();
       41     }
       42 
       43     @Override
       44     protected void onPause() {
       45         Log.d("onPause", "onPause execution " + this.getLocalClassName());
       46         super.onPause();
       47     }
       48 
       49     @Override
       50     protected void onStop() {
       51         Log.d("onStop", "onStop execution " + this.getLocalClassName());
       52         super.onStop();
       53     }
       54 
       55     @Override
       56     protected void onDestroy() {
       57         Log.d("onDestroy", "onDestroy execution " + this.getLocalClassName());
       58         super.onDestroy();
       59     }
       60 
       61     @Override
       62     protected void onRestart() {
       63         Log.d("onRestart", "onRestart execution " + this.getLocalClassName());
       64         super.onRestart();
       65     }
       66     @Override
       67     public void onSaveInstanceState(@NonNull Bundle outState) {
       68         super.onSaveInstanceState(outState);
       69         for (int id : ids_to_save) {
       70             View view = findViewById(id);
       71             if (view instanceof TextView) {
       72                 outState.putString(String.valueOf(id), ((TextView) view).getText().toString());
       73             }
       74         }
       75     }
       76 
       77     @Override
       78     protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {
       79         super.onRestoreInstanceState(savedInstanceState);
       80 
       81         for (int id : ids_to_save) {
       82             View view = findViewById(id);
       83             if (view instanceof TextView) {
       84                 ((TextView) view).setText(savedInstanceState.getString(String.valueOf(id)));
       85             }
       86         }
       87 
       88         counter = Integer.parseInt(Objects.requireNonNull(savedInstanceState.getString(String.valueOf(R.id.counter_view))));
       89     }
       90 }
     
2


