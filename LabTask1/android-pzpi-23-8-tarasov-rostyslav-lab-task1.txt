МІНІСТЕРСТВО ОСВІТИ ТА НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ
РАДІОЕЛЕКТРОНІКИ




ЗВІТ
Лабораторної роботи №1
з дисципліни «Програмування під Android»
на тему «Створення мінімального Android застосунку»


Виконав:
Тарасов Ростислав Максимович
Перевірив:
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович









Харків 2024

1.1  Мета роботи
     Встановити Android Studio та створити мінімальний застосунок для Android, в якому реалізувати усі базові методи життєвого циклу активностей і надпис «Task 1» у центрі екрану, використовуючи лінійну розмітку.
     
1.2  Хід роботи
     Встановлюємо Android Studio 
     Створюємо проект із шаблоном
     Ознайомлюємось із структурою проекту
     Підключаємо емулятор або (у моєму випадку) фізичний пристрій 
     Запускаємо застосунок для перевірки успішності компіляції
     Відкриваємо файл activity_main.xml який знаходиться в директорії res/layout/ і змінюємо constraintLayout на LinearLayout, а також деякі параметри, і додаємо gravity="center". В цю розмітку додаємо TextView з текстом «Task 1» (додаток А).
     Далі відкриваємо MainActivity.java і реалізовуємо базові методи життєвого циклу активностей такі як: onCreate(), onStart(), onRestart(), onResume(), onPause(), onStop і onDestroy(). Також додаємо логування для відслідковування послідовність роботи цих методів (додаток Б).
     
1.3  Висновки
     Посилання на відеозахист: https://youtu.be/UDOu0Z4acbs
     У ході виконання роботи було успішно досягнуто поставленої мети. Було встановлено середовище розробки Android Studio, яке є основним інструментом для створення застосунків під операційну систему Android. В рамках роботи було створено мінімальний застосунок, у якому реалізовано всі базові методи життєвого циклу активностей. Це дозволило ознайомитися з основними етапами роботи активностей у застосунках Android, зокрема з методами onCreate(), onStart(), onResume(), onPause(), onStop(), onRestart() та onDestroy().
     Крім того, у застосунку було використано лінійну розмітку (LinearLayout) для розміщення текстового надпису «Task 1» у центрі екрану. Це дало змогу закріпити навички роботи з XML-розміткою та основними компонентами інтерфейсу користувача в Android.
     Таким чином, виконана робота дозволила отримати початкові практичні навички розробки застосунків для Android, а також розуміння основних принципів роботи активностей і їх життєвого циклу. Ці знання є фундаментальними для подальшого вивчення та розробки більш складних і функціональних застосунків під Android.




     Додаток А
Вихідний код activity_main.xml
       1 <?xml version="1.0" encoding="utf-8"?>
       2 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
       3     xmlns:app="http://schemas.android.com/apk/res-auto"
       4     xmlns:tools="http://schemas.android.com/tools"
       5     android:id="@+id/main"
       6     android:layout_width="match_parent"
       7     android:layout_height="match_parent"
       8     android:gravity="center"
       9     tools:context=".MainActivity">
       10 
       11     <TextView
       12         android:id="@+id/text_task_1"
       13         android:layout_width="wrap_content"
       14         android:layout_height="wrap_content"
       15         android:text="Task 1"
       16         android:textSize="80sp"/>
       17 
       18 </LinearLayout>
       19


     Додаток Б
вихідний код MainActivity.java
       1 public class MainActivity extends AppCompatActivity {
       2 
       3     @Override
       4     protected void onCreate(Bundle savedInstanceState) {
       5         Log.d("Life cycle", "onCreate");
       6         super.onCreate(savedInstanceState);
       7         EdgeToEdge.enable(this);
       8         setContentView(R.layout.activity_main);
       9         ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
       10             Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
       11             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
       12             return insets;
       13         });
       14     }
       15 
       16     @Override
       17     protected void onStart() {
       18         super.onStart();
       19         Log.d("Life cycle", "onStart");
       20     }
       21 
       22     @Override
       23     protected void onPause() {
       24         super.onPause();
       25         Log.d("Life cycle", "onPause");
       26     }
       27 
       28     @Override
       29     protected void onResume() {
       30         super.onResume();
       31         Log.d("Life cycle", "onResume");
       32     }
       33 
       34     @Override
       35     protected void onRestart() {
       36         super.onRestart();
       37         Log.d("Life cycle", "onRestart");
       38     }
       39 
       40     @Override
       41     protected void onStop() {
       42         super.onStop();
       43         Log.d("Life cycle", "onStop");
       44     }
       45 
       46     @Override
       47     protected void onDestroy() {
       48         super.onDestroy();
       49         Log.d("Life cycle", "onDestroy");
       50     }
       51 
       52 }
2


